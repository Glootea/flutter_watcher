name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: flutter_watcher
            asset_name: flutter_watcher-linux
          - os: windows-latest
            artifact_name: flutter_watcher.exe
            asset_name: flutter_watcher-windows.exe
          - os: macos-latest
            artifact_name: flutter_watcher
            asset_name: flutter_watcher-macos

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Build
        run: cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}

  # Optional: Create a release when pushing a tag
  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            flutter_watcher-linux
            flutter_watcher-windows.exe
            flutter_watcher-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
